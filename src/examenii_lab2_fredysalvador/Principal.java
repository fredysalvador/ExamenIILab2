/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package examenii_lab2_fredysalvador;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fredy Salvador
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        centerForm();
    }

    private void centerForm() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int screenWidth = screenSize.width;
        int screenHeight = screenSize.height;

        int formWidth = this.getWidth();
        int formHeight = this.getHeight();

        int x = (screenWidth - formWidth) / 2;
        int y = (screenHeight - formHeight) / 2;

        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frmcomputadora = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        InsertarTabla1 = new javax.swing.JButton();
        eliminarfilaTabla1 = new javax.swing.JButton();
        InsertarFilaTabla1 = new javax.swing.JButton();
        frmtecnico = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        InsertarTabla2 = new javax.swing.JButton();
        InsertaFilaTabla2 = new javax.swing.JButton();
        eliminarfilaTabla2 = new javax.swing.JButton();
        frmpartes = new javax.swing.JDialog();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        btSimulacion = new javax.swing.JButton();
        btAgregarComputadoras = new javax.swing.JButton();
        btAgregarTecnicos = new javax.swing.JButton();
        btAgregarPartes = new javax.swing.JButton();

        frmcomputadora.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                frmcomputadoraWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num_serie", "AÃ±o", "Color", "Material", "Ram", "Disco Duro", "Bateria", "Teclado", "Pantalla", "Procesador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        InsertarTabla1.setText("Agregar Informacion");
        InsertarTabla1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarTabla1ActionPerformed(evt);
            }
        });

        eliminarfilaTabla1.setText("Eliminar Fila");
        eliminarfilaTabla1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarfilaTabla1ActionPerformed(evt);
            }
        });

        InsertarFilaTabla1.setText("Insertar Fila");
        InsertarFilaTabla1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarFilaTabla1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmcomputadoraLayout = new javax.swing.GroupLayout(frmcomputadora.getContentPane());
        frmcomputadora.getContentPane().setLayout(frmcomputadoraLayout);
        frmcomputadoraLayout.setHorizontalGroup(
            frmcomputadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmcomputadoraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmcomputadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(frmcomputadoraLayout.createSequentialGroup()
                        .addComponent(InsertarTabla1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarfilaTabla1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 522, Short.MAX_VALUE)
                        .addComponent(InsertarFilaTabla1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        frmcomputadoraLayout.setVerticalGroup(
            frmcomputadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmcomputadoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(frmcomputadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InsertarFilaTabla1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminarfilaTabla1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InsertarTabla1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        frmtecnico.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                frmtecnicoWindowOpened(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Edad", "Genero", "cant_comp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        InsertarTabla2.setText("Agregar Informacion");
        InsertarTabla2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarTabla2ActionPerformed(evt);
            }
        });

        InsertaFilaTabla2.setText("Insertar Fila");
        InsertaFilaTabla2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertaFilaTabla2ActionPerformed(evt);
            }
        });

        eliminarfilaTabla2.setText("Eliminar Fila");
        eliminarfilaTabla2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarfilaTabla2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmtecnicoLayout = new javax.swing.GroupLayout(frmtecnico.getContentPane());
        frmtecnico.getContentPane().setLayout(frmtecnicoLayout);
        frmtecnicoLayout.setHorizontalGroup(
            frmtecnicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmtecnicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmtecnicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGroup(frmtecnicoLayout.createSequentialGroup()
                        .addComponent(InsertarTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarfilaTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertaFilaTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        frmtecnicoLayout.setVerticalGroup(
            frmtecnicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmtecnicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frmtecnicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InsertarTabla2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InsertaFilaTabla2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminarfilaTabla2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        frmpartes.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                frmpartesWindowOpened(evt);
            }
        });

        jCheckBox1.setText("Ram");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num_serie", "AÃ±o", "Color", "Material", "Ram", "Disco Duro", "Bateria", "Teclado", "Pantalla", "Procesador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jCheckBox2.setText("Disco Duro");

        jCheckBox3.setText("Bateria");

        jCheckBox4.setText("Teclado");

        jCheckBox5.setText("Pantalla");

        jCheckBox6.setText("Procesador");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Edad", "Genero", "cant_comp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        btSimulacion.setText("Simular Reparacion");
        btSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSimulacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmpartesLayout = new javax.swing.GroupLayout(frmpartes.getContentPane());
        frmpartes.getContentPane().setLayout(frmpartesLayout);
        frmpartesLayout.setHorizontalGroup(
            frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmpartesLayout.createSequentialGroup()
                .addGroup(frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmpartesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE))
                    .addGroup(frmpartesLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1))
                        .addGap(35, 35, 35)
                        .addComponent(jCheckBox2)
                        .addGap(31, 31, 31)
                        .addComponent(jCheckBox3)
                        .addGap(32, 32, 32)
                        .addComponent(jCheckBox4)
                        .addGap(29, 29, 29)
                        .addComponent(jCheckBox5)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmpartesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        frmpartesLayout.setVerticalGroup(
            frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmpartesLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6))
                .addGap(18, 18, 18)
                .addComponent(btSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(frmpartesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmpartesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(293, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btAgregarComputadoras.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        btAgregarComputadoras.setText("Agregar Computadora");
        btAgregarComputadoras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAgregarComputadorasMouseClicked(evt);
            }
        });
        btAgregarComputadoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarComputadorasActionPerformed(evt);
            }
        });

        btAgregarTecnicos.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        btAgregarTecnicos.setText("Agregar Tecnico");
        btAgregarTecnicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAgregarTecnicosMouseClicked(evt);
            }
        });
        btAgregarTecnicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarTecnicosActionPerformed(evt);
            }
        });

        btAgregarPartes.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        btAgregarPartes.setText("Agregar Parte");
        btAgregarPartes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAgregarPartesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btAgregarComputadoras, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btAgregarTecnicos, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(btAgregarPartes, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAgregarComputadoras, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAgregarTecnicos, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(btAgregarPartes, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertarTabla1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarTabla1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

// Crear un StringBuilder para construir el contenido del archivo
        StringBuilder txtData = new StringBuilder();

// Obtener los nombres de las columnas
        int columnCount = model.getColumnCount();
        for (int i = 0; i < columnCount; i++) {
            txtData.append(model.getColumnName(i));
            if (i < columnCount - 1) {
                txtData.append(",");
            }
        }
        txtData.append("\n");

// Obtener los datos de la tabla
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                txtData.append(model.getValueAt(i, j));
                if (j < columnCount - 1) {
                    txtData.append(",");
                }
            }
            txtData.append("\n");
        }

// Especificar la ubicaciÃ³n y el nombre de archivo fijo
        String filePath = "Computadora_Agregar.txt";

// Escribir los datos en el archivo
        try ( FileWriter fileWriter = new FileWriter(filePath)) {
            fileWriter.write(txtData.toString());

            // Mostrar mensaje de Ã©xito
            JOptionPane.showMessageDialog(this, "ExportaciÃ³n exitosa");
        } catch (IOException ex) {
            ex.printStackTrace();
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al exportar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_InsertarTabla1ActionPerformed

    private void InsertarTabla2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarTabla2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

// Crear un StringBuilder para construir el contenido del archivo
        StringBuilder txtData = new StringBuilder();

// Obtener los nombres de las columnas
        int columnCount = model.getColumnCount();
        for (int i = 0; i < columnCount; i++) {
            txtData.append(model.getColumnName(i));
            if (i < columnCount - 1) {
                txtData.append(",");
            }
        }
        txtData.append("\n");

// Obtener los datos de la tabla
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                txtData.append(model.getValueAt(i, j));
                if (j < columnCount - 1) {
                    txtData.append(",");
                }
            }
            txtData.append("\n");
        }

// Especificar la ubicaciÃ³n y el nombre de archivo fijo
        String filePath = "Tecnico.txt";

// Escribir los datos en el archivo
        try ( FileWriter fileWriter = new FileWriter(filePath)) {
            fileWriter.write(txtData.toString());

            // Mostrar mensaje de Ã©xito
            JOptionPane.showMessageDialog(this, "ExportaciÃ³n exitosa");
        } catch (IOException ex) {
            ex.printStackTrace();
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al exportar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_InsertarTabla2ActionPerformed

    private void InsertaFilaTabla2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertaFilaTabla2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.addRow(new Object[model.getColumnCount()]);
    }//GEN-LAST:event_InsertaFilaTabla2ActionPerformed

    private void eliminarfilaTabla2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarfilaTabla2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        int selectedRow = jTable2.getSelectedRow();

        if (selectedRow != -1) {
            // Eliminar la fila seleccionada
            model.removeRow(selectedRow);

// Crear un StringBuilder para construir el contenido del archivo
            StringBuilder txtData = new StringBuilder();

// Obtener los nombres de las columnas
            int columnCount = model.getColumnCount();
            for (int i = 0; i < columnCount; i++) {
                txtData.append(model.getColumnName(i));
                if (i < columnCount - 1) {
                    txtData.append(",");
                }
            }
            txtData.append("\n");

// Obtener los datos de la tabla
            int rowCount = model.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                for (int j = 0; j < columnCount; j++) {
                    txtData.append(model.getValueAt(i, j));
                    if (j < columnCount - 1) {
                        txtData.append(",");
                    }
                }
                txtData.append("\n");
            }

                // Especificar la ubicaciÃ³n y el nombre de archivo fijo
            String filePath = "Tecnico.txt";

                // Escribir los datos en el archivo
            try ( FileWriter fileWriter = new FileWriter(filePath)) {
                fileWriter.write(txtData.toString());

                // Mostrar mensaje de Ã©xito
                JOptionPane.showMessageDialog(this, "EliminaciÃ³n exitosa");
            } catch (IOException ex) {
                ex.printStackTrace();
                // Mostrar mensaje de error
                JOptionPane.showMessageDialog(this, "Error al exportar los datos", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            // Mostrar mensaje de error si no se ha seleccionado ninguna fila
            JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarfilaTabla2ActionPerformed

    private void InsertarFilaTabla1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarFilaTabla1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[model.getColumnCount()]);

    }//GEN-LAST:event_InsertarFilaTabla1ActionPerformed

    private void eliminarfilaTabla1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarfilaTabla1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            // Eliminar la fila seleccionada
            model.removeRow(selectedRow);

// Crear un StringBuilder para construir el contenido del archivo
            StringBuilder txtData = new StringBuilder();

// Obtener los nombres de las columnas
            int columnCount = model.getColumnCount();
            for (int i = 0; i < columnCount; i++) {
                txtData.append(model.getColumnName(i));
                if (i < columnCount - 1) {
                    txtData.append(",");
                }
            }
            txtData.append("\n");

// Obtener los datos de la tabla
            int rowCount = model.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                for (int j = 0; j < columnCount; j++) {
                    txtData.append(model.getValueAt(i, j));
                    if (j < columnCount - 1) {
                        txtData.append(",");
                    }
                }
                txtData.append("\n");
            }

// Especificar la ubicaciÃ³n y el nombre de archivo fijo
            String filePath = "Computadora_Agregar.txt";

// Escribir los datos en el archivo
            try ( FileWriter fileWriter = new FileWriter(filePath)) {
                fileWriter.write(txtData.toString());

                // Mostrar mensaje de Ã©xito
                JOptionPane.showMessageDialog(this, "Eliminacion exitosa");
            } catch (IOException ex) {
                ex.printStackTrace();
                // Mostrar mensaje de error
                JOptionPane.showMessageDialog(this, "Error al exportar los datos", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            // Mostrar mensaje de error si no se ha seleccionado ninguna fila
            JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_eliminarfilaTabla1ActionPerformed

    private void btAgregarComputadorasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAgregarComputadorasMouseClicked
        // TODO add your handling code here:
        frmcomputadora.pack();
        frmcomputadora.setLocationRelativeTo(this);
        frmcomputadora.setModal(true);
        frmcomputadora.setVisible(true);
    }//GEN-LAST:event_btAgregarComputadorasMouseClicked

    private void btAgregarTecnicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarTecnicosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btAgregarTecnicosActionPerformed

    private void btAgregarTecnicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAgregarTecnicosMouseClicked
        // TODO add your handling code here:
        frmtecnico.pack();
        frmtecnico.setLocationRelativeTo(this);
        frmtecnico.setModal(true);
        frmtecnico.setVisible(true);
    }//GEN-LAST:event_btAgregarTecnicosMouseClicked

    private void btAgregarComputadorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarComputadorasActionPerformed

    }//GEN-LAST:event_btAgregarComputadorasActionPerformed

    private void frmcomputadoraWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmcomputadoraWindowOpened
        try {
            String filePath = "Computadora_Agregar.txt";

            // Leer el archivo de texto
            File file = new File(filePath);
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                // Leer cada lÃ­nea del archivo y agregar los datos a la tabla
                boolean skipFirstLine = true;  // Variable para omitir la primera lÃ­nea
                while ((line = reader.readLine()) != null) {
                    if (skipFirstLine) {
                        skipFirstLine = false;
                        continue;  // Omitir la primera lÃ­nea
                    }
                    String[] data = line.split(",");
                    model.addRow(data);
                }

                reader.close();

                // No mostrar ningÃºn mensaje
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al importar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_frmcomputadoraWindowOpened

    private void frmtecnicoWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmtecnicoWindowOpened
        // TODO add your handling code here:
           try {
            String filePath = "Tecnico.txt";

            // Leer el archivo de texto
            File file = new File(filePath);
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                // Leer cada lÃ­nea del archivo y agregar los datos a la tabla
                boolean skipFirstLine = true;  // Variable para omitir la primera lÃ­nea
                while ((line = reader.readLine()) != null) {
                    if (skipFirstLine) {
                        skipFirstLine = false;
                        continue;  // Omitir la primera lÃ­nea
                    }
                    String[] data = line.split(",");
                    model.addRow(data);
                }

                reader.close();

                // No mostrar ningÃºn mensaje
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al importar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_frmtecnicoWindowOpened

    private void frmpartesWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmpartesWindowOpened
        // TODO add your handling code here:
          try {
            String filePath = "Computadora_Agregar.txt";

            // Leer el archivo de texto
            File file = new File(filePath);
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

                // Leer cada lÃ­nea del archivo y agregar los datos a la tabla
                boolean skipFirstLine = true;  // Variable para omitir la primera lÃ­nea
                while ((line = reader.readLine()) != null) {
                    if (skipFirstLine) {
                        skipFirstLine = false;
                        continue;  // Omitir la primera lÃ­nea
                    }
                    String[] data = line.split(",");
                    model.addRow(data);
                }

                reader.close();

                // No mostrar ningÃºn mensaje
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al importar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
          
          
          
               // TODO add your handling code here:
           try {
            String filePath = "Tecnico.txt";

            // Leer el archivo de texto
            File file = new File(filePath);
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

                // Leer cada lÃ­nea del archivo y agregar los datos a la tabla
                boolean skipFirstLine = true;  // Variable para omitir la primera lÃ­nea
                while ((line = reader.readLine()) != null) {
                    if (skipFirstLine) {
                        skipFirstLine = false;
                        continue;  // Omitir la primera lÃ­nea
                    }
                    String[] data = line.split(",");
                    model.addRow(data);
                }

                reader.close();

                // No mostrar ningÃºn mensaje
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al importar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        }
          
          
    }//GEN-LAST:event_frmpartesWindowOpened

    private void btAgregarPartesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAgregarPartesMouseClicked
        // TODO add your handling code here:
        frmpartes.pack();
        frmpartes.setLocationRelativeTo(this);
        frmpartes.setModal(true);
        frmpartes.setVisible(true);
    }//GEN-LAST:event_btAgregarPartesMouseClicked

    private void btSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimulacionActionPerformed
 // Obtener el valor de la columna 4 (Ã­ndice 3) de la fila seleccionada
 
  int selectedRow = jTable4.getSelectedRow();

    // Verificar si se ha seleccionado una fila
    if (selectedRow != -1) {
Object value = jTable4.getValueAt(selectedRow, 3);

// Verificar si el valor es de tipo numÃ©rico
if (value instanceof Number) {
    // Convertir el valor a un tipo numÃ©rico especÃ­fico (por ejemplo, int)
    int column4Value = ((Number) value).intValue();

    // Calcular el porcentaje de fallas basado en el valor obtenido
    double porcentajeFallas;
    if (column4Value >= 1 && column4Value <= 5) {
        porcentajeFallas = 0.3;  // 30% de fallar
    } else if (column4Value >= 6 && column4Value <= 15) {
        porcentajeFallas = 0.22;  // 22% de fallar
    } else if (column4Value >= 16 && column4Value <= 30) {
        porcentajeFallas = 0.13;  // 13% de fallar
    } else {
        porcentajeFallas = 0.07;  // 7% de fallar
    }

    // Utilizar el porcentaje de fallas como necesites
    // ...

    JOptionPane.showMessageDialog(this, "Porcentaje de fallas: " + (porcentajeFallas * 100) + "%");
}}
    }//GEN-LAST:event_btSimulacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton InsertaFilaTabla2;
    private javax.swing.JButton InsertarFilaTabla1;
    private javax.swing.JButton InsertarTabla1;
    private javax.swing.JButton InsertarTabla2;
    private javax.swing.JButton btAgregarComputadoras;
    private javax.swing.JButton btAgregarPartes;
    private javax.swing.JButton btAgregarTecnicos;
    private javax.swing.JButton btSimulacion;
    private javax.swing.JButton eliminarfilaTabla1;
    private javax.swing.JButton eliminarfilaTabla2;
    private javax.swing.JDialog frmcomputadora;
    private javax.swing.JDialog frmpartes;
    private javax.swing.JDialog frmtecnico;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
